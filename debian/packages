# If the debian/rules or debian/control file is missing, rebuild the file:
#
#   $ yada rebuild control
#   $ yada rebuild rules


%define lsb_release_i %`lsb_release -s -i || echo Debian`
%define distributor %{?lsb_release_i:%{lsb_release_i}}%{!?lsb_release_i:Debian}

%define libfakechroot_version %`grep '^AC_INIT' configure.ac | sed 's/.*\[\([0-9][0-9.]*\)\].*/\1/'`

%define biarch_amd64_libdir_Debian /usr/lib32
%define biarch_amd64_libdir_Ubuntu /usr/lib32
%define biarch_amd64_libdir %{biarch_amd64_libdir_%{distributor}}

# distributor=%{distributor}
# biarch_amd64_libdir_%{distributor}=%{biarch_amd64_libdir_%{distributor}}
# biarch_amd64_libdir=%{biarch_amd64_libdir}

Source: fakechroot
Section: utils
Priority: optional
Maintainer: Piotr Roszatycki <dexter@debian.org>
Standards-Version: 3.8.0
%if %`dpkg --compare-versions %{YADA_VERSION} ge 0.54 && echo 1`
Homepage: http://fakechroot.alioth.debian.org/
Vcs-Browser: http://svn.debian.org/wsvn/fakechroot/trunk/
Vcs-Svn: svn://svn.debian.org/fakechroot/trunk/
%endif
Upstream-Source: http://svn.debian.org/wsvn/fakechroot/tags/%{libfakechroot_version}-1/fakechroot_%{libfakechroot_version}.orig.tar.gz?op=file
Description: gives a fake chroot environment
Copyright: LGPL
 libfakechroot -- fake chroot environment
 Copyright (c) 2003-2008 Piotr Roszatycki <dexter@debian.org>, LGPL
 Copyright (c) 2007      Mark Eichin <eichin@metacarta.com>, LGPL
 .
 klik2 support -- give direct access to a list of directories
 Copyright (c) 2006-2007 Lionel Tricon <lionel.tricon@free.fr>, LGPL
Build-Depends: lsb-release
Build-Depends: libc6-dev-i386 [amd64]
Build-Depends: libc6-dev-amd64 [i386]
Build-Depends: libc6-dev-powerpc [ppc64]
Build-Depends: libc6-dev-s390x [s390]
Build-Depends: libc6-dev-sparc64 [sparc]
Build-Depends: gcc-multilib [amd64 i386 powerpc s390 sparc]
Build: bash
 CC=${CC:-gcc}
 CFLAGS=${CFLAGS:--Wall -pedantic -g}
 if [ "${DEB_BUILD_OPTIONS#*noopt}" != "$DEB_BUILD_OPTIONS" ]; then
     CFLAGS="$CFLAGS -O0"
 else
     CFLAGS="$CFLAGS -O2 -fno-strict-aliasing"
 fi
 .
 COMMON_CONFIG="\
        --prefix=/usr \
        --mandir=/usr/share/man \
        --disable-static \
        --with-libpath=/usr/lib/fakechroot:/usr/lib64/fakechroot:/usr/lib32/fakechroot"
 .
 if ! [ -f configure-stamp ]; then
     mkdir -p build-tree-lib build-tree-fake build-tree-lib-biarch build-tree-fake-biarch
     pushd build-tree-lib
         CC="$CC" CFLAGS="$CFLAGS" \
             ../configure \
                 --cache-file=../config.cache \
                 --build=$DEB_BUILD_GNU_TYPE \
                 --host=$DEB_HOST_GNU_TYPE \
                 $COMMON_CONFIG
     popd
     pushd build-tree-fake
         CC="$CC" CFLAGS="$CFLAGS" \
             ../fake/configure \
                 --cache-file=../config.cache \
                 --build=$DEB_BUILD_GNU_TYPE \
                 --host=$DEB_HOST_GNU_TYPE \
                 $COMMON_CONFIG
     popd
     case "$DEB_HOST_ARCH" in
         amd64)
             pushd build-tree-lib-biarch
                 CC="gcc -m32" CFLAGS="$CFLAGS" \
                     ../configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=i386-linux \
                         --libdir=%{biarch_amd64_libdir} \
                         $COMMON_CONFIG
             popd
             pushd build-tree-fake-biarch
                 CC="gcc -m32" CFLAGS="$CFLAGS" \
                     ../fake/configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=i386-linux \
                         --libdir=%{biarch_amd64_libdir} \
                         $COMMON_CONFIG
             popd
             ;;
         i386)
             pushd build-tree-lib-biarch
                 CC="gcc -m64" CFLAGS="$CFLAGS" \
                     ../configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=x86_64-linux \
                         --libdir=/usr/lib64 \
                         $COMMON_CONFIG
             popd
             pushd build-tree-fake-biarch
                 CC="gcc -m64" CFLAGS="$CFLAGS" \
                     ../fake/configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=x86_64-linux \
                         --libdir=/usr/lib64 \
                         $COMMON_CONFIG
             popd
             ;;
         ppc64)
             pushd build-tree-lib-biarch
                 CC="gcc -m32" CFLAGS="$CFLAGS" \
                     ../configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=powerpc-linux \
                         --libdir=/usr/lib32 \
                         $COMMON_CONFIG
             popd
             pushd build-tree-fake-biarch
                 CC="gcc -m32" CFLAGS="$CFLAGS" \
                     ../fake/configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=powerpc-linux \
                         --libdir=/usr/lib32 \
                         $COMMON_CONFIG
             popd
             ;;
         s390)
             pushd build-tree-lib-biarch
                 CC="gcc -m64" CFLAGS="$CFLAGS" \
                     ../configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=s390x-linux \
                         --libdir=/usr/lib64 \
                         $COMMON_CONFIG
             popd
             pushd build-tree-fake-biarch
                 CC="gcc -m64" CFLAGS="$CFLAGS" \
                     ../fake/configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=s390x-linux \
                         --libdir=/usr/lib64 \
                         $COMMON_CONFIG
             popd
             ;;
         sparc)
             pushd build-tree-lib-biarch
                 CC="gcc -m64" CFLAGS="$CFLAGS" \
                     ../configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=sparc64-linux \
                         --libdir=/usr/lib64 \
                         $COMMON_CONFIG
             popd
             pushd build-tree-fake-biarch
                 CC="gcc -m64" CFLAGS="$CFLAGS" \
                     ../fake/configure \
                         --cache-file=../config.biarch.cache \
                         --build=$DEB_BUILD_GNU_TYPE \
                         --host=sparc64-linux \
                         --libdir=/usr/lib64 \
                         $COMMON_CONFIG
             popd
             ;;
     esac
     sleep 1 && touch configure-stamp
 fi
 .
 if ! [ build-stamp -nt configure-stamp ]; then
     pushd build-tree-lib
         make
         make check
     popd
     pushd build-tree-fake
         make
     popd
     case "$DEB_HOST_ARCH" in
         amd64|i386|ppc64|s390|sparc)
             pushd build-tree-lib-biarch
                 make
             popd
             pushd build-tree-fake-biarch
                 make
             popd
             ;;
     esac
     touch build-stamp
 fi
Clean: sh
 make distclean || make clean || true
 rm -f config.*cache || true
 rm -rf build-tree-* || true
 rm -f *-stamp || true

Package: fakechroot
Architecture: any
Depends: [/usr/lib/libfakechroot.so]
Conflicts: libc6-i386 (<= 2.9-18)
Description: gives a fake chroot environment
 This package provides a library which overrides libc functions, so
 it is possible to use root-specific tools without root privileges.
 .
 In fake chroot you can install i.e. Debian bootstrap, create developer's
 environment and build packages inside chroot'ed system using standard
 non-root user account.
Install: bash
 for i in build-tree-*; do
     pushd $i
         if [ -f Makefile ]; then
             rm -rf tmp || true
             make install DESTDIR=$ROOT
         fi
     popd
 done
 find $ROOT -name *.so -print0 | xargs -0r chmod -v -x
 find $ROOT -name *.la -print0 | xargs -0r rm -v -f
 yada install -doc -subdir examples scripts/restoremode.sh scripts/savemode.sh scripts/ldd.fake
Finalize: sh
 chmod -v u+s $ROOT/usr/lib/*.so
 .
 case "$DEB_HOST_ARCH" in
     amd64)
         chmod -v u+s $ROOT%{biarch_amd64_libdir}/*.so;;
     ppc64)
         chmod -v u+s $ROOT/usr/lib32/*.so;;
     i386|s390|sparc)
         chmod -v u+s $ROOT/usr/lib64/*.so;;
 esac
Overrides:
 debian-changelog-file-missing-or-wrong-name
 file-in-unusual-dir usr/lib64/fakechroot/libfakechroot.so
 file-in-unusual-dir usr/lib64/libfakechroot.so
 file-in-unusual-dir usr/lib32/fakechroot/libfakechroot.so
 file-in-unusual-dir usr/lib32/libfakechroot.so
 non-standard-dir-in-usr usr/lib64/
 non-standard-dir-in-usr usr/lib32/
 non-standard-file-perm usr/lib64/libfakechroot.so 4644 != 0644
 non-standard-file-perm usr/lib32/libfakechroot.so 4644 != 0644
 non-standard-file-perm usr/lib/libfakechroot.so 4644 != 0644
 no-shlibs-control-file usr/lib64/libfakechroot.so
 no-shlibs-control-file usr/lib32/libfakechroot.so
 no-shlibs-control-file usr/lib/libfakechroot.so
 package-name-doesnt-match-sonames libfakechroot
 package-name-doesnt-match-sonames libfakechroot.so
 shlib-with-bad-permissions usr/lib64/libfakechroot.so 4644
 shlib-with-bad-permissions usr/lib32/libfakechroot.so 4644
 shlib-with-bad-permissions usr/lib/libfakechroot.so 4644
Contains: libs
