#!/usr/bin/make -f
# Generated automatically from debian/packages
# by yada v0.54, of Sun, 28 Oct 2007

DEB_HOST_ARCH        := $(shell dpkg-architecture -qDEB_HOST_ARCH 2>/dev/null)
DEB_HOST_ARCH_OS     := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS 2>/dev/null)
DEB_HOST_ARCH_CPU    := $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU 2>/dev/null)
DEB_HOST_GNU_CPU     := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU 2>/dev/null)
DEB_HOST_GNU_TYPE    := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE 2>/dev/null)
DEB_HOST_GNU_SYSTEM  := $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM 2>/dev/null)

DEB_BUILD_ARCH       := $(shell dpkg-architecture -qDEB_BUILD_ARCH 2>/dev/null)
DEB_BUILD_ARCH_OS    := $(shell dpkg-architecture -qDEB_BUILD_ARCH_OS 2>/dev/null)
DEB_BUILD_ARCH_CPU   := $(shell dpkg-architecture -qDEB_BUILD_ARCH_CPU 2>/dev/null)
DEB_BUILD_GNU_CPU    := $(shell dpkg-architecture -qDEB_BUILD_GNU_CPU 2>/dev/null)
DEB_BUILD_GNU_TYPE   := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE 2>/dev/null)
DEB_BUILD_GNU_SYSTEM := $(shell dpkg-architecture -qDEB_BUILD_GNU_SYSTEM 2>/dev/null)

# Take account of old dpkg-architecture output.
ifeq ($(DEB_HOST_ARCH_CPU),)
  DEB_HOST_ARCH_CPU := $(DEB_HOST_GNU_CPU))
  ifeq ($(DEB_HOST_ARCH_CPU),i486)
    DEB_HOST_ARCH_OS := i386
  else
  ifeq ($(DEB_HOST_ARCH_CPU),x86_64)
    DEB_HOST_ARCH_OS := amd64
  endif
  endif
endif
ifeq ($(DEB_HOST_ARCH_OS),)
  DEB_HOST_ARCH_OS := $(subst -gnu,,$(DEB_HOST_GNU_SYSTEM))
  ifeq ($(DEB_HOST_ARCH_OS),gnu)
    DEB_HOST_ARCH_OS := hurd
  endif
endif
ifeq ($(DEB_BUILD_ARCH_CPU),)
  DEB_BUILD_ARCH_CPU := $(DEB_BUILD_GNU_CPU))
  ifeq ($(DEB_BUILD_ARCH_CPU),i486)
    DEB_BUILD_ARCH_OS := i386
  else
  ifeq ($(DEB_BUILD_ARCH_CPU),x86_64)
    DEB_BUILD_ARCH_OS := amd64
  endif
  endif
endif
ifeq ($(DEB_BUILD_ARCH_OS),)
  DEB_BUILD_ARCH_OS := $(subst -gnu,,$(DEB_BUILD_GNU_SYSTEM))
  ifeq ($(DEB_BUILD_ARCH_OS),gnu)
    DEB_BUILD_ARCH_OS := hurd
  endif
endif

LEFT_PARENTHESIS:=(
VERSION:=$(shell head -n1 debian/changelog | sed -e "s/^[0-9a-zA-Z.-]* $(LEFT_PARENTHESIS)//" -e "s/[^0-9a-zA-Z.:+~-].*//")

SHELL=/bin/bash

.PHONY: default
default:
	@echo "Specify a target:"; \
	echo " build              compile the package"; \
	echo " build-arch         compile the architecture-dependent package"; \
	echo " build-indep        compile the architecture-independent package"; \
	echo " binary             make all binary packages"; \
	echo " binary-arch        make all architecture-dependent binary packages"; \
	echo " binary-indep       make all architecture-independent binary packages"; \
	echo " clean              clean up the source package"; \
	echo; \
	echo " clean-install-tree clean up only under debian/"; \
	echo

# Build the package and prepare the install tree

.PHONY: build-only build
build-only: debian/build-stamp
build: build-only

.PHONY: build-arch-only build-arch
build-arch-only: debian/build-arch-stamp
build-arch: build-arch-only

.PHONY: build-indep-only build-indep
build-indep-only: debian/build-indep-stamp
build-indep: build-indep-only

# Make sure these rules and the control file are up-to-date

.PHONY: rules control templates
rules: debian/rules
debian/rules: $(shell which yada) debian/packages-tmp
	yada rebuild rules

control: debian/control
debian/control: $(shell which yada) debian/packages-tmp
	yada rebuild control

templates: debian/templates debian/po/POTFILES.in
debian/templates: $(shell which yada) debian/packages-tmp
	yada rebuild templates
debian/po/POTFILES.in: $(shell which yada) debian/packages-tmp
	yada rebuild templates

debian/build-stamp: debian/build-arch-stamp debian/build-indep-stamp
	@[ -f $(shell which yada) -a -f debian/rules ]
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'CC=$${CC:-gcc}';\
	echo -E 'CFLAGS=$${CFLAGS:--Wall -pedantic -g}';\
	echo -E 'if [ "$${DEB_BUILD_OPTIONS#*noopt}" != "$$DEB_BUILD_OPTIONS" ]; then';\
	echo -E '    CFLAGS="$$CFLAGS -O0"';\
	echo -E 'else';\
	echo -E '    CFLAGS="$$CFLAGS -O2 -fno-strict-aliasing"';\
	echo -E 'fi';\
	echo -E '';\
	echo -E 'COMMON_CONFIG="\';\
	echo -E '       --prefix=/usr \';\
	echo -E '       --mandir=/usr/share/man \';\
	echo -E '       --disable-static \';\
	echo -E '       --with-libpath=/usr/lib/fakechroot:/usr/lib64/fakechroot:/usr/lib32/fakechroot"';\
	echo -E '';\
	echo -E 'if ! [ -f configure-stamp ]; then';\
	echo -E '    mkdir -p build-tree-lib build-tree-fake build-tree-lib-biarch build-tree-fake-biarch';\
	echo -E '    pushd build-tree-lib';\
	echo -E '        CC="$$CC" CFLAGS="$$CFLAGS" \';\
	echo -E '            ../configure \';\
	echo -E '                --cache-file=../config.cache \';\
	echo -E '                --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                --host=$$DEB_HOST_GNU_TYPE \';\
	echo -E '                $$COMMON_CONFIG';\
	echo -E '    popd';\
	echo -E '    pushd build-tree-fake';\
	echo -E '        CC="$$CC" CFLAGS="$$CFLAGS" \';\
	echo -E '            ../fake/configure \';\
	echo -E '                --cache-file=../config.cache \';\
	echo -E '                --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                --host=$$DEB_HOST_GNU_TYPE \';\
	echo -E '                $$COMMON_CONFIG';\
	echo -E '    popd';\
	echo -E '    case "$$DEB_HOST_ARCH" in';\
	echo -E '        amd64)';\
	echo -E '            pushd build-tree-lib-biarch';\
	echo -E '                CC="gcc -m32" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=i386-linux \';\
	echo -E '                        --libdir=/emul/ia32-linux/usr/lib \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            pushd build-tree-fake-biarch';\
	echo -E '                CC="gcc -m32" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../fake/configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=i386-linux \';\
	echo -E '                        --libdir=/emul/ia32-linux/usr/lib \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            ;;';\
	echo -E '        i386)';\
	echo -E '            pushd build-tree-lib-biarch';\
	echo -E '                CC="gcc -m64" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=x86_64-linux \';\
	echo -E '                        --libdir=/usr/lib64 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            pushd build-tree-fake-biarch';\
	echo -E '                CC="gcc -m64" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../fake/configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=x86_64-linux \';\
	echo -E '                        --libdir=/usr/lib64 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            ;;';\
	echo -E '        ppc64)';\
	echo -E '            pushd build-tree-lib-biarch';\
	echo -E '                CC="gcc -m32" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=powerpc-linux \';\
	echo -E '                        --libdir=/usr/lib32 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            pushd build-tree-fake-biarch';\
	echo -E '                CC="gcc -m32" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../fake/configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=powerpc-linux \';\
	echo -E '                        --libdir=/usr/lib32 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            ;;';\
	echo -E '        s390)';\
	echo -E '            pushd build-tree-lib-biarch';\
	echo -E '                CC="gcc -m64" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=s390x-linux \';\
	echo -E '                        --libdir=/usr/lib64 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            pushd build-tree-fake-biarch';\
	echo -E '                CC="gcc -m64" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../fake/configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=s390x-linux \';\
	echo -E '                        --libdir=/usr/lib64 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            ;;';\
	echo -E '        sparc)';\
	echo -E '            pushd build-tree-lib-biarch';\
	echo -E '                CC="gcc -m64" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=sparc64-linux \';\
	echo -E '                        --libdir=/usr/lib64 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            pushd build-tree-fake-biarch';\
	echo -E '                CC="gcc -m64" CFLAGS="$$CFLAGS" \';\
	echo -E '                    ../fake/configure \';\
	echo -E '                        --cache-file=../config.biarch.cache \';\
	echo -E '                        --build=$$DEB_BUILD_GNU_TYPE \';\
	echo -E '                        --host=sparc64-linux \';\
	echo -E '                        --libdir=/usr/lib64 \';\
	echo -E '                        $$COMMON_CONFIG';\
	echo -E '            popd';\
	echo -E '            ;;';\
	echo -E '    esac';\
	echo -E '    sleep 1 && touch configure-stamp';\
	echo -E 'fi';\
	echo -E '';\
	echo -E 'if ! [ build-stamp -nt configure-stamp ]; then';\
	echo -E '    pushd build-tree-lib';\
	echo -E '        make';\
	echo -E '    popd';\
	echo -E '    pushd build-tree-fake';\
	echo -E '        make';\
	echo -E '    popd';\
	echo -E '    case "$$DEB_HOST_ARCH" in';\
	echo -E '        amd64|i386|ppc64|s390|sparc)';\
	echo -E '            pushd build-tree-lib-biarch';\
	echo -E '                make';\
	echo -E '            popd';\
	echo -E '            pushd build-tree-fake-biarch';\
	echo -E '                make';\
	echo -E '            popd';\
	echo -E '            ;;';\
	echo -E '    esac';\
	echo -E '    touch build-stamp';\
	echo -E 'fi') | /bin/bash
	touch debian/build-stamp

debian/build-arch-stamp:
	@[ -f $(shell which yada) -a -f debian/rules ]
	touch debian/build-arch-stamp

debian/build-indep-stamp: debian/build-arch-stamp
	@[ -f $(shell which yada) -a -f debian/rules ]
	touch debian/build-indep-stamp

.PHONY: install-tree
install-tree: install-tree-any
install-tree-any: \
	debian/tmp-fakechroot/DEBIAN/control

debian/tmp-fakechroot/DEBIAN/control: debian/build-stamp debian/control
	rm -rf debian/tmp-fakechroot
	umask 022 && install -d debian/tmp-fakechroot/DEBIAN
	install -d debian/tmp-fakechroot/usr/share/doc/fakechroot
	umask 022; yada generate copyright fakechroot \
	  > debian/tmp-fakechroot/usr/share/doc/fakechroot/copyright
	install -m 644 -p debian/changelog \
	  debian/tmp-fakechroot/usr/share/doc/fakechroot/changelog
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export ROOT="$$(pwd)/debian/tmp-fakechroot" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export CONTROL="$$(pwd)/debian/tmp-fakechroot/DEBIAN" \
	  && export PACKAGE="fakechroot" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'for i in build-tree-*; do';\
	echo -E '    pushd $$i';\
	echo -E '        if [ -f Makefile ]; then';\
	echo -E '            rm -rf tmp || true';\
	echo -E '            make install DESTDIR=$$ROOT';\
	echo -E '        fi';\
	echo -E '    popd';\
	echo -E 'done';\
	echo -E 'find $$ROOT -name *.so -print0 | xargs -0r chmod -v -x';\
	echo -E 'find $$ROOT -name *.la -print0 | xargs -0r rm -v -f';\
	echo -E 'yada install -doc -subdir examples scripts/restoremode.sh scripts/savemode.sh scripts/ldd.fake') | /bin/bash
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export ROOT="$$(pwd)/debian/tmp-fakechroot" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export CONTROL="$$(pwd)/debian/tmp-fakechroot/DEBIAN" \
	  && export PACKAGE="fakechroot" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'yada perl';\
	echo -E 'yada python';\
	echo -E 'yada strip';\
	echo -E 'yada shlibdeps') | /bin/sh
	rm -f debian/shlibs.local || true
	test -f debian/tmp-fakechroot/DEBIAN/shlibs && cat debian/tmp-fakechroot/DEBIAN/shlibs | while read lib ver pkg; do echo $$lib $$ver; done >> debian/shlibs.local || true
	LD_LIBRARY_PATH="$$LD_LIBRARY_PATH:debian/tmp-fakechroot/lib:debian/tmp-fakechroot/usr/lib" dpkg-shlibdeps -pshlibs:fakechroot -dDepends debian/tmp-fakechroot/usr/lib/libfakechroot.so
	yada compress fakechroot
	yada generate maintscripts fakechroot
	find debian/tmp-fakechroot -type f -print \
	  | sed -n 's/^debian\/tmp-fakechroot\(\/etc\/.*\)$$/\1/p' \
	  > debian/tmp-fakechroot/DEBIAN/conffiles
	test -s debian/tmp-fakechroot/DEBIAN/conffiles || rm -f debian/tmp-fakechroot/DEBIAN/conffiles
	yada rebuild control
	yada generate substvars fakechroot
	umask 022 && dpkg-gencontrol -isp -pfakechroot -Pdebian/tmp-fakechroot

# Build package files

.PHONY: binary binary-arch binary-indep
binary: binary-arch binary-indep
binary-arch: binary-arch-any

.PHONY: binary-arch-any
binary-arch-any: \
	binary-package-fakechroot
binary-indep:

.PHONY: binary-package-fakechroot
binary-package-fakechroot: check-root debian/tmp-fakechroot/DEBIAN/control
	@[ -f $(shell which yada) -a -f debian/rules ]
	chown -R 0.0 debian/tmp-fakechroot
	chmod -R u=rwX,go=rX debian/tmp-fakechroot
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export ROOT="$$(pwd)/debian/tmp-fakechroot" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export CONTROL="$$(pwd)/debian/tmp-fakechroot/DEBIAN" \
	  && export PACKAGE="fakechroot" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'chmod -v u+s $$ROOT/usr/lib/*.so';\
	echo -E '';\
	echo -E 'case "$$DEB_HOST_ARCH" in';\
	echo -E '    amd64)';\
	echo -E '        chmod -v u+s $$ROOT/emul/ia32-linux/usr/lib/*.so;;';\
	echo -E '    ppc64)';\
	echo -E '        chmod -v u+s $$ROOT/usr/lib32/*.so;;';\
	echo -E '    i386|s390|sparc)';\
	echo -E '        chmod -v u+s $$ROOT/usr/lib64/*.so;;';\
	echo -E 'esac') | /bin/sh
	@if [ -d debian/tmp-fakechroot/usr/doc/fakechroot ]; then \
	  echo "*** Yada warning: /usr/doc/fakechroot should be /usr/share/doc/fakechroot";\
	fi
	dpkg-deb --build debian/tmp-fakechroot ..

.PHONY: check-root
check-root:
	@[ `id -u` = 0 ] || (echo "You must be root to do this!"; false)

debian/packages-tmp: debian/packages 
	yada rebuild packages

## Clean up afterwards

.PHONY: clean clean-install-tree clean-build

clean: clean-install-tree clean-build debian/control debian/rules
	rm -f debian/packages-tmp debian/packages-tmp-new debian/packages-tmp-include

clean-build:
	@[ -f $(shell which yada) -a -f debian/rules ]
	rm -f debian/build-stamp debian/build-arch-stamp debian/build-indep-stamp
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'make distclean || make clean || true';\
	echo -E 'rm -f config.*cache || true';\
	echo -E 'rm -rf build-tree-* || true';\
	echo -E 'rm -f *-stamp || true') | /bin/sh
	yada unpatch
	rm -rf debian/tmp

clean-install-tree: debian/rules
	@[ -f $(shell which yada) -a -f debian/rules ]
	rm -f debian/install-tree-stamp
	rm -rf debian/tmp-* debian/files* debian/substvars debian/shlibs.local debian/ucf
