#!/usr/bin/make -f
# Generated automatically from debian/packages
# by yada v0.34, of Mon, 25 Apr 2005

DEB_HOST_ARCH        := $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_GNU_CPU     := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)
DEB_HOST_GNU_TYPE    := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_HOST_GNU_SYSTEM  := $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM)

DEB_BUILD_ARCH       := $(shell dpkg-architecture -qDEB_BUILD_ARCH)
DEB_BUILD_GNU_CPU    := $(shell dpkg-architecture -qDEB_BUILD_GNU_CPU)
DEB_BUILD_GNU_TYPE   := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_GNU_SYSTEM := $(shell dpkg-architecture -qDEB_BUILD_GNU_SYSTEM)

VERSION:=$(shell LC_ALL=C dpkg-parsechangelog | sed -ne 's/^Version: *\([^2]*\)/\1/p')

SHELL=/bin/bash

.PHONY: default
default:
	@echo "Specify a target:"; \
	echo " build              compile the package"; \
	echo " build-arch         compile the architecture-dependent package"; \
	echo " build-indep        compile the architecture-independent package"; \
	echo " binary             make all binary packages"; \
	echo " binary-arch        make all architecture-dependent binary packages"; \
	echo " binary-indep       make all architecture-independent binary packages"; \
	echo " clean              clean up the source package"; \
	echo; \
	echo " clean-install-tree clean up only under debian/"; \
	echo

# Build the package and prepare the install tree

.PHONY: build-only build
build-only: debian/build-stamp
build: build-only

.PHONY: build-arch-only build-arch
build-arch-only: debian/build-arch-stamp
build-arch: build-arch-only

.PHONY: build-indep-only build-indep
build-indep-only: debian/build-indep-stamp
build-indep: build-indep-only

# Make sure these rules and the control file are up-to-date

.PHONY: rules control templates
rules: debian/rules
debian/rules: $(shell which yada) debian/packages-tmp
	yada rebuild rules

control: debian/control
debian/control: $(shell which yada) debian/packages-tmp
	yada rebuild control

templates: debian/templates
debian/templates: $(shell which yada) debian/packages-tmp
	yada rebuild templates

debian/build-stamp: debian/build-arch-stamp debian/build-indep-stamp
	@[ -f $(shell which yada) -a -f debian/rules ]
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'CC=$${CC:-gcc}';\
	echo -E 'CFLAGS=$${CFLAGS:--Wall -pedantic -g}';\
	echo -E 'CXXFLAGS=$${CFLAGS:--Wall -pedantic -g}';\
	echo -E 'if [ "$${DEB_BUILD_OPTIONS#*noopt}" != "$$DEB_BUILD_OPTIONS" ]; then';\
	echo -E '    CFLAGS="$$CFLAGS -O0"';\
	echo -E '    CXXFLAGS="$$CXXFLAGS -O0"';\
	echo -E 'else';\
	echo -E '    CFLAGS="$$CFLAGS -O2"';\
	echo -E '    CXXFLAGS="$$CXXFLAGS -O2"';\
	echo -E 'fi';\
	echo -E '';\
	echo -E 'if ! [ -f autoconf-stamp ]; then';\
	echo -E '    rm -f aclocal.m4 configure';\
	echo -E '    aclocal-1.7';\
	echo -E '    autoheader';\
	echo -E '    libtoolize --copy';\
	echo -E '    automake-1.7 --add-missing --copy';\
	echo -E '    autoconf';\
	echo -E '    pushd fake';\
	echo -E '        aclocal-1.7';\
	echo -E '        automake-1.7 --add-missing --copy';\
	echo -E '        autoconf';\
	echo -E '    popd';\
	echo -E '    touch autoconf-stamp';\
	echo -E 'fi';\
	echo -E '';\
	echo -E 'if ! [ -f configure-stamp ]; then';\
	echo -E '    install -d build-tree-lib-sysv build-tree-fake-sysv build-tree-lib64-sysv';\
	echo -E '    pushd build-tree-lib-sysv';\
	echo -E '        CC="$$CC" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --libdir=/usr/lib/libfakechroot \';\
	echo -E '                --program-suffix=-sysv';\
	echo -E '    popd';\
	echo -E '    pushd build-tree-fake-sysv';\
	echo -E '    CC="$$CC" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '        ../fake/configure --prefix=/usr --mandir=/usr/share/man \';\
	echo -E '                --program-suffix=-sysv';\
	echo -E '    popd';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "s390-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-sysv';\
	echo -E '        CC="gcc -m64" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --build=s390-linux --host=s390x-linux \';\
	echo -E '                --program-suffix=-sysv';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "sparc-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-sysv';\
	echo -E '        CC="gcc -m64" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --build=sparc-linux --host=sparc64-linux \';\
	echo -E '                --program-suffix=-sysv';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "x86_64-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-sysv';\
	echo -E '        CC="gcc-3.4 -m32" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --build=x86_64-linux --host=i386-linux \';\
	echo -E '                --program-suffix=-sysv';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    install -d build-tree-lib-tcp build-tree-fake-tcp build-tree-lib64-tcp';\
	echo -E '    pushd build-tree-lib-tcp';\
	echo -E '        CC="$$CC" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --libdir=/usr/lib/libfakechroot \';\
	echo -E '                --program-suffix=-tcp --with-ipc=tcp';\
	echo -E '    popd';\
	echo -E '    pushd build-tree-fake-tcp';\
	echo -E '    CC="$$CC" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '        ../fake/configure --prefix=/usr --mandir=/usr/share/man \';\
	echo -E '                --program-suffix=-tcp --with-ipc=tcp';\
	echo -E '    popd';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "s390-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-tcp';\
	echo -E '        CC="gcc -m64" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --build=s390-linux --host=s390x-linux \';\
	echo -E '                --program-suffix=-tcp --with-ipc=tcp';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "sparc-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-tcp';\
	echo -E '        CC="gcc -m64" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --build=sparc-linux --host=sparc64-linux \';\
	echo -E '                --program-suffix=-tcp --with-ipc=tcp';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "x86_64-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-tcp';\
	echo -E '        CC="gcc-3.4 -m32" CFLAGS="$$CFLAGS" CXXFLAGS="$$CXXFLAGS" \';\
	echo -E '            ../configure --prefix=/usr --mandir=/usr/share/man --build=x86_64-linux --host=i386-linux \';\
	echo -E '                --program-suffix=-tcp x86_64-linux';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    touch configure-stamp';\
	echo -E 'fi';\
	echo -E '';\
	echo -E 'if ! [ -f build-stamp ]; then';\
	echo -E '    pushd build-tree-lib-sysv';\
	echo -E '        make';\
	echo -E '    popd';\
	echo -E '    pushd build-tree-fake-sysv';\
	echo -E '        make';\
	echo -E '    popd';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "s390-linux" ] || \';\
	echo -E '       [ "$$DEB_HOST_GNU_TYPE" = "sparc-linux" ] || \';\
	echo -E '       [ "$$DEB_HOST_GNU_TYPE" = "x86_64-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-sysv';\
	echo -E '            make';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    pushd build-tree-lib-tcp';\
	echo -E '        make';\
	echo -E '    popd';\
	echo -E '    pushd build-tree-fake-tcp';\
	echo -E '        make';\
	echo -E '    popd';\
	echo -E '    if [ "$$DEB_HOST_GNU_TYPE" = "s390-linux" ] || \';\
	echo -E '       [ "$$DEB_HOST_GNU_TYPE" = "sparc-linux" ] || \';\
	echo -E '       [ "$$DEB_HOST_GNU_TYPE" = "x86_64-linux" ]; then';\
	echo -E '        pushd build-tree-lib64-tcp';\
	echo -E '            make';\
	echo -E '        popd';\
	echo -E '    fi';\
	echo -E '    touch build-stamp';\
	echo -E 'fi') | /bin/bash
	touch debian/build-stamp

debian/build-arch-stamp:
	@[ -f $(shell which yada) -a -f debian/rules ]
	touch debian/build-arch-stamp

debian/build-indep-stamp:
	@[ -f $(shell which yada) -a -f debian/rules ]
	touch debian/build-indep-stamp

.PHONY: install-tree
install-tree: install-tree-any
install-tree-any: \
	debian/tmp-fakechroot/DEBIAN/control

debian/tmp-fakechroot/DEBIAN/control: debian/build-stamp debian/control
	rm -rf debian/tmp-fakechroot
	umask 022 && install -d debian/tmp-fakechroot/DEBIAN
	install -d debian/tmp-fakechroot/usr/share/doc/fakechroot
	umask 022; yada generate copyright \
	  > debian/tmp-fakechroot/usr/share/doc/fakechroot/copyright
	install -m 644 -p debian/changelog \
	  debian/tmp-fakechroot/usr/share/doc/fakechroot/changelog
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export ROOT="$$(pwd)/debian/tmp-fakechroot" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export CONTROL="$$(pwd)/debian/tmp-fakechroot/DEBIAN" \
	  && export PACKAGE="fakechroot" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'if [ "$$DEB_HOST_GNU_TYPE" = "x86_64-linux" ]; then';\
	echo -E '    BIARCH_LIB_DIR=emul/ia32-linux/usr/lib';\
	echo -E 'else';\
	echo -E '    BIARCH_LIB_DIR=usr/lib64';\
	echo -E 'fi';\
	echo -E '';\
	echo -E 'for i in build-tree*; do';\
	echo -E '    pushd $$i';\
	echo -E '        if [ -f Makefile ]; then';\
	echo -E '            rm -rf tmp || true';\
	echo -E '            make install DESTDIR=$$(pwd)/tmp';\
	echo -E '        fi';\
	echo -E '    popd';\
	echo -E 'done';\
	echo -E '';\
	echo -E 'yada install -lib -into /usr/lib \';\
	echo -E '    -as $$(basename build-tree-fake-sysv/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-sysv&/'\'') \';\
	echo -E '    build-tree-fake-sysv/tmp/usr/lib/*.so.*.*.*';\
	echo -E 'yada symlink -into /usr/lib \';\
	echo -E '    -as $$(basename build-tree-fake-sysv/tmp/usr/lib/*.so.? | sed '\''s/\.so/-sysv&/'\'') \';\
	echo -E '    $$(basename build-tree-fake-sysv/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-sysv&/'\'')';\
	echo -E 'yada install -lib -into /usr/lib \';\
	echo -E '    -as $$(basename build-tree-fake-tcp/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-tcp&/'\'') \';\
	echo -E '    build-tree-fake-tcp/tmp/usr/lib/*.so.*.*.*';\
	echo -E 'yada symlink -into /usr/lib \';\
	echo -E '    -as $$(basename build-tree-fake-tcp/tmp/usr/lib/*.so.? | sed '\''s/\.so/-tcp&/'\'') \';\
	echo -E '    $$(basename build-tree-fake-tcp/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-tcp&/'\'')';\
	echo -E 'yada install -script -as fakechroot-sysv build-tree-lib-sysv/tmp/usr/bin/fakeroot-sysv';\
	echo -E 'yada install -bin -as fakechrootd-sysv build-tree-lib-sysv/tmp/usr/bin/faked-sysv';\
	echo -E 'yada install -lib -into /usr/lib/libfakechroot \';\
	echo -E '    -as $$(basename build-tree-lib-sysv/tmp/usr/lib/libfakechroot/*.so.*.*.* | sed '\''s/\.so/-sysv&/'\'') \';\
	echo -E '    build-tree-lib-sysv/tmp/usr/lib/libfakechroot/*.so.*.*.*';\
	echo -E 'yada symlink -into /usr/lib/libfakechroot \';\
	echo -E '    -as $$(basename build-tree-lib-sysv/tmp/usr/lib/libfakechroot/*.so.? | sed '\''s/\.so/-sysv&/'\'') \';\
	echo -E '    $$(basename build-tree-lib-sysv/tmp/usr/lib/libfakechroot/*.so.*.*.* | sed '\''s/\.so/-sysv&/'\'')';\
	echo -E 'yada install -script -as fakechroot-tcp build-tree-lib-tcp/tmp/usr/bin/fakeroot-tcp';\
	echo -E 'yada install -bin -as fakechrootd-tcp build-tree-lib-tcp/tmp/usr/bin/faked-tcp';\
	echo -E 'yada install -lib -into /usr/lib/libfakechroot \';\
	echo -E '    -as $$(basename build-tree-lib-tcp/tmp/usr/lib/libfakechroot/*.so.*.*.* | sed '\''s/\.so/-tcp&/'\'') \';\
	echo -E '    build-tree-lib-tcp/tmp/usr/lib/libfakechroot/*.so.*.*.*';\
	echo -E 'yada symlink -into /usr/lib/libfakechroot \';\
	echo -E '    -as $$(basename build-tree-lib-tcp/tmp/usr/lib/libfakechroot/*.so.? | sed '\''s/\.so/-tcp&/'\'') \';\
	echo -E '    $$(basename build-tree-lib-tcp/tmp/usr/lib/libfakechroot/*.so.*.*.* | sed '\''s/\.so/-tcp&/'\'')';\
	echo -E '';\
	echo -E 'if [ "$$DEB_HOST_GNU_TYPE" = "s390-linux" ] || \';\
	echo -E '   [ "$$DEB_HOST_GNU_TYPE" = "sparc-linux" ] || \';\
	echo -E '   [ "$$DEB_HOST_GNU_TYPE" = "x86_64-linux" ]; then';\
	echo -E '    yada install -lib -into /$$BIARCH_LIB_DIR/libfakechroot \';\
	echo -E '        -as $$(basename build-tree-lib64-sysv/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-sysv&/'\'') \';\
	echo -E '        build-tree-lib64-sysv/tmp/usr/lib/*.so.*.*.*';\
	echo -E '    yada symlink -into /$$BIARCH_LIB_DIR/libfakechroot \';\
	echo -E '        -as $$(basename build-tree-lib64-sysv/tmp/usr/lib/*.so.? | sed '\''s/\.so/-sysv&/'\'') \';\
	echo -E '        $$(basename build-tree-lib64-sysv/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-sysv&/'\'')';\
	echo -E '    yada install -lib -into /$$BIARCH_LIB_DIR/libfakechroot \';\
	echo -E '        -as $$(basename build-tree-lib64-tcp/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-tcp&/'\'') \';\
	echo -E '        build-tree-lib64-tcp/tmp/usr/lib/*.so.*.*.*';\
	echo -E '    yada symlink -into /$$BIARCH_LIB_DIR/libfakechroot \';\
	echo -E '        -as $$(basename build-tree-lib64-tcp/tmp/usr/lib/*.so.? | sed '\''s/\.so/-tcp&/'\'') \';\
	echo -E '        $$(basename build-tree-lib64-tcp/tmp/usr/lib/*.so.*.*.* | sed '\''s/\.so/-tcp&/'\'')';\
	echo -E 'fi';\
	echo -E '';\
	echo -E 'yada install -man -as fakechroot-sysv.1 doc/fakeroot.1';\
	echo -E 'yada install -man -as fakechroot-tcp.1 doc/fakeroot.1';\
	echo -E 'yada install -man -as fakechrootd-sysv.1 doc/faked.1';\
	echo -E 'yada install -man -as fakechrootd-tcp.1 doc/faked.1';\
	echo -E 'yada install -doc -subdir examples scripts/restoremode.sh scripts/savemode.sh scripts/ldd.fake') | /bin/bash
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export ROOT="$$(pwd)/debian/tmp-fakechroot" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export CONTROL="$$(pwd)/debian/tmp-fakechroot/DEBIAN" \
	  && export PACKAGE="fakechroot" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'yada perl';\
	echo -E 'yada python';\
	echo -E 'yada strip';\
	echo -E 'yada shlibdeps') | /bin/sh
	yada compress fakechroot
	yada generate maintscripts fakechroot
	find debian/tmp-fakechroot -type f -print \
	  | sed -n 's/^debian\/tmp-fakechroot\(\/etc\/.*\)$$/\1/p' \
	  > debian/tmp-fakechroot/DEBIAN/conffiles
	if test ! -s debian/tmp-fakechroot/DEBIAN/conffiles; then rm -f debian/tmp-fakechroot/DEBIAN/conffiles; fi
	yada rebuild control
	yada generate substvars fakechroot
	umask 022 && dpkg-gencontrol -isp -pfakechroot -Pdebian/tmp-fakechroot

# Build package files

.PHONY: binary binary-arch binary-indep
binary: binary-arch binary-indep
binary-arch: binary-arch-any

.PHONY: binary-arch-any
binary-arch-any: \
	binary-package-fakechroot
binary-indep:

.PHONY: binary-package-fakechroot
binary-package-fakechroot: check-root debian/tmp-fakechroot/DEBIAN/control
	@[ -f $(shell which yada) -a -f debian/rules ]
	chown -R 0.0 debian/tmp-fakechroot
	chmod -R u=rwX,go=rX debian/tmp-fakechroot
	@if [ -d debian/tmp-fakechroot/usr/doc/fakechroot ]; then \
	  echo "*** Yada warning: /usr/doc/fakechroot should be /usr/share/doc/fakechroot";\
	fi
	dpkg-deb --build debian/tmp-fakechroot ..

.PHONY: check-root
check-root:
	@[ `id -u` = 0 ] || (echo "You must be root to do this!"; false)

debian/packages-tmp: debian/packages 
	yada rebuild packages

## Clean up afterwards

.PHONY: clean clean-install-tree clean-build

clean: clean-install-tree clean-build debian/control debian/rules
	rm -f debian/packages-tmp debian/packages-tmp-new debian/packages-tmp-include

clean-build:
	@[ -f $(shell which yada) -a -f debian/rules ]
	rm -f debian/build-stamp debian/build-arch-stamp debian/build-indep-stamp
	@umask 022 \
	  && export pwd="$$(pwd)" \
	  && export TMPROOT="$$(pwd)/debian/tmp" \
	  && export SOURCE="fakechroot" \
	  && export VERSION="$(VERSION)" \
	  && export DEB_HOST_GNU_CPU="$(DEB_HOST_GNU_CPU)" \
	  && export DEB_HOST_GNU_TYPE="$(DEB_HOST_GNU_TYPE)" \
	  && export DEB_HOST_GNU_SYSTEM="$(DEB_HOST_GNU_SYSTEM)" \
	  && export DEB_BUILD_GNU_CPU="$(DEB_BUILD_GNU_CPU)" \
	  && export DEB_BUILD_GNU_TYPE="$(DEB_BUILD_GNU_TYPE)" \
	  && export DEB_BUILD_GNU_SYSTEM="$(DEB_BUILD_GNU_SYSTEM)" && (\
	echo -E 'eval "yada () { perl $$(which yada) \"\$$@\"; }"; set -e; set -v';\
	echo -E 'rm -rf build-tree-* || true';\
	echo -E 'rm -f *-stamp || true';\
	echo -E 'rm -rf $$(cat .cvsignore)';\
	echo -E 'for i in $$(find -name .cvsignore); do';\
	echo -E '    ( cd $$(dirname $$i) && rm -rf $$(cat .cvsignore) )';\
	echo -E 'done') | /bin/sh
	yada unpatch
	rm -rf debian/tmp

clean-install-tree: debian/rules
	@[ -f $(shell which yada) -a -f debian/rules ]
	rm -f debian/install-tree-stamp
	rm -rf debian/tmp-* debian/files* debian/substvars debian/shlibs.local debian/ucf
