.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.\" "verbatim" environment (from strace.1)
.de CW
.sp
.nf
.ft CW
..
.de CE
.ft
.fi
.sp
..
.\"
.TH fakechroot 1 "18 Aug 2003" "Debian Project" "Debian manual"
.\" Manpage by J.H.M. Dassen <jdassen@wi.LeidenUniv.nl>
.SH NAME
fakechroot \- gives a fake chroot environment
.SH SYNOPSIS
.B fakechroot 
.B [\-l|\-\-lib
.IB library] 
.B [\-\-faked
.IB faked-binary ] 
.B [\-i
.IB load-file ]
.B [\-s
.IB save-file ]
.B [\-u|\-\-unknown\-is\-real ]
.BI [\-\-]
.BI [command]
.SH DESCRIPTION
.B fakechroot
runs a command in an environment were it appears to have root privileges for
file manipulation.  This is almost the same as 
.BR fakeroot (1)
command with
additional possibility to use
.BR chroot (8)
command in such environment.
This is useful for allowing users to create own chrooted environment with
possibility to install another packages without need for root privileges.

.B fakechroot
is heavily based on
.BR fakeroot (1)
and replaces more library functions (
.BR chroot (2),
.BR open (2),
etc.) by ones that simulate the effect the real library
functions would have had, had the user really been in chroot. These wrapper
functions are in a shared library
.B /usr/lib/libfakechroot.so*
which is loaded through the 
.B LD_PRELOAD
mechanism of the dynamic loader. (See
.BR ld.so (8))

In fake chroot you can install Debian bootstrap with `debootstrap --fakechroot' command.
In this environment you can use i.e.
.BR apt-get (8)
command to install another packages from
common user's account.

.SH OPTIONS
.TP
\fB\-l\fR \fIlibrary\fR, \fB\-\-lib\fR \fIlibrary\fR
Specify an alternative wrapper library.
.TP
.BI \-\-faked \ binary
Specify an alternative binary to use as faked.
.TP
.BI [\-\-] \ command
Any command you want to be ran as fakechroot. Use \(oq\-\-\(cq if in the command
you have other options that may confuse fakechroot's option parsing.
.TP
.BI \-s \ save-file
Save the fakechroot environment to save-file on exit. This file can be
used to restore the environment later using \-i. However, this file will
leak and fakechroot will behave in odd ways unless you leave the files
touched inside the fakechroot alone when outside the environment. Still,
this can be useful. For example, it can be used with
.BR rsync (1)
to back up
and restore whole directory trees complete with user, group and device
information without needing to be root. See
.I /usr/share/doc/fakeroot/README.saving
for more details.
.TP
.BI \-i \ load-file
Load a fakechroot environment previously saved using \-s from load-file.
Note that this does not implicitly save the file, use \-s as well for
that behaviour. Using the same file for both \-i and \-s in a single
.BR fakechroot
invocation is safe.
.TP
\fB\-u\fR, \fB\-\-unknown\-is\-real\fR
Use the real ownership of files previously unknown to fakechroot instead of
pretending they are owned by root:root.
.TP
.BI \-b \ fd
Specify fd base (TCP mode only). fd is the minimum file descriptor
number to use for TCP connections; this may be important to avoid
conflicts with the file descriptors used by the programs being run
under fakeroot.
.TP
.BI \-h
Display help.
.TP
.BI \-v
Display version.

.SH EXAMPLES
Here is an example session with 
.BR fakechroot . 
Notice that inside the fake root environment file manipulation that
requires root privileges succeeds, but is not really happening.
.CW
$ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11
$ fakechroot \-s fakechroot.save debootstrap \-\-variant=fakechroot sarge /tmp/sarge

$ fakechroot \-i fakechroot.save chroot /tmp/sarge /bin/bash
# cd /
# sh /usr/share/doc/fakechroot/examples/savemode.sh
# echo deb http://ftp.debian.org/debian sarge main contrib non\-free > /etc/apt/sources.list
# echo deb\-src http://ftp.debian.org/debian sarge main contrib non\-free >> /etc/apt/sources.list
# apt\-get update
# apt\-get install adduser whiptail build\-essential devscripts
# adduser \-\-uid 1001 dexter
# cd /tmp
# apt\-get source hello
# cd hello\-*
# export DEBUILD_PRESERVE_ENVVARS=FAKECHROOT,LD_PRELOAD,LD_LIBRARY_PATH,FAKEROOTKEY,FAKECHROOT_BASE,FAKED_MODE
# debuild \-\-preserve\-env \-b
# exit
.CE

.SH SECURITY ASPECTS
.B fakechroot
is a regular, non-setuid program. It does not enhance a user's
privileges, or decrease the system's security.
.SH FILES
.I /usr/lib/libfakechroot/libfakechroot.so*
The shared library containing the wrapper functions.
.SH ENVIRONMENT
.B 
.IP FAKEROOTKEY
The key used to communicate with the fakeroot daemon. Any program
started with the right 
.B LD_PRELOAD
and a
.B FAKEROOTKEY
of a running daemon will automatically connect to that daemon, and
have the same "fake" view of the file system's permissions/ownerships.
(assuming the daemon and connecting program were started by the same
user). 
.B 
.IP FAKECHROOT
The value is true for fake chroot environment.
.B 
.IP FAKECHROOTDIR
The root directory for fake chroot environment.
.B
.IP LD_LIBRARY_PATH
.B
.IP LD_PRELOAD
Fakechroot is implemented by wrapping system calls.  This is
accomplished by setting LD_LIBRARY_PATH=/usr/lib/fakechroot and
LD_PRELOAD=libfakechroot.so.0.  That library is loaded before the
system's C library, and so most of the library functions are
intercepted by it.  If you need to set either
.B LD_LIBRARY_PATH
or
.B LD_PRELOAD
from
within a fakechroot environment, it should be set relative to the
given paths, as in
.B LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/foo/bar/

.SH LIMITATIONS
.IP "\(bu" 4
Every command executed within 
.B fakechroot 
needs to be linked to the same version of the C library as
.B fakechroot
itself.
.IP "\(bu" 4
Statically linked binaries doesn't work, especially
.BR ldconfig (8),
so you have to wrap this command and i.e. set the dpkg diversion.
.IP "\(bu" 4
.BR ldd (1)
also doesn't work. You have to use wrapper.
.IP "\(bu" 4
You can override fake chroot with symlinks to the outside. It can
be useful for accessing /proc or /dev directory.
.IP "\(bu" 4
.BR ltrace (1)
sometimes doesn't work.
.BR strace (1)
does work pretty well.
.IP "\(bu" 4
lckpwdf() and ulckpwdf() are ignored so
.BR update-passwd (8)
should work
.IP "\(bu" 4
Your real uid have to exist in /etc/passwd. Create it with 
`adduser --uid realuid realuser'.
.IP "\(bu" 4
.BR debuild (1)
cleans environment. Use \-\-preserve-env option to prevent this behaviour.
.IP "\(bu" 4
fakeroot's -s option doesn't work well. You can use simple shell
scripts to save and restore faked modes.

.SH COPYING
.B fakechroot
is distributed under the GNU General Public License.
(GPL 2.0 or greater).
.SH AUTHOR
joost witteveen
.RI < joostje@debian.org >
.SH MANUAL PAGE
mostly by J.H.M. Dassen 
.RI <jdassen@wi.LeidenUniv.nl> 
Rather a lot mods/additions by joost.

Adapted to 
.B fakechroot
by Piotr Roszatycki
.RI <dexter@debian.org>
.SH "SEE ALSO"
.BR fakeroot (1),
.BR faked (1),
.BR dpkg\-buildpackage (1),
.BR debuild (1),
.BR debootstrap (1),
.BR /usr/share/doc/fakeroot/DEBUG
